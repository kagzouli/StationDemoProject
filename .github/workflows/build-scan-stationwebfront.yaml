name: "[Repo] Scan StationDemo Back"

#on: [pull_request]
on: 
  workflow_dispatch:

env:
  NODEJS_VERSION: 14
  REPO_DOCKER_HUB: kagzouli3

jobs:

  build_backend:
    runs-on: ubuntu-latest
    steps:
      
      # Retrieve a token for pull
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}


      # Retrieve current source
      - name: Checkout current 
        id: checkout-current
        uses: actions/checkout@v3
        with:
          path: current
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Build Backend
        id: build_backend
        run: mvn --batch-mode --update-snapshots package
        working-directory: current/application/spring-java
 
      - name: Upload backend WAR
        id: upload-backendwar
        uses: actions/upload-artifact@v3
        with:
          name: backendwar
          path: current/application/spring-java/StationDemoWeb/target/StationDemoSecureWeb.war

  scan_backend:
    runs-on: ubuntu-latest
    needs: build_backend
    steps:

     # Retrieve a token for pull
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}


      # Retrieve current source
      - name: Checkout current 
        id: checkout-current
        uses: actions/checkout@v3
        with:
          path: current
          token: ${{ steps.get_workflow_token.outputs.token }}

      # Download artifact
      - name: download backend WAR
        id: download-backendwar
        uses: actions/download-artifact@v3
        with:
          name: backendwar
          path: current/application/spring-java/StationDemoWeb/docker/


      - name: Build Backenddocker
        id: build-backend-docker
        run: docker build -t ${{ env.REPO_DOCKER_HUB }}/station-back .
        working-directory: current/application/spring-java/StationDemoWeb/docker

      - name: Run Trivy vulnerability scanner
        id: trivy_scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.REPO_DOCKER_HUB }}/station-back:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'