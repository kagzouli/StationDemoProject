name: "[Global] Build station"

#on: [pull_request]
on: 
  workflow_dispatch:
    inputs:

      docker_project_version:
        type: string
        default: 1.0.11
        description: station  project version
        required: true


      image_on_aws:
        type: choice
        description: Image on AWS (oui/non)
        default: non
        options:
          - non
          - oui
        required: true

env:
  NODEJS_VERSION: 14
  REPO_DOCKER_HUB: kagzouli3

jobs:


  # Push station front to dockerhub
  push_db_dockerhub:
    runs-on: ubuntu-latest
    steps:
      
      # Retrieve a token for pull
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}


      # Retrieve current source
      - name: Checkout current 
        id: checkout-current
        uses: actions/checkout@v3
        with:
          path: current
          token: ${{ steps.get_workflow_token.outputs.token }}

      # Login to dockerhub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Tag push
        id: push-db-docker
        run: |
            # Build
            docker build -t {{ env.REPO_DOCKER_HUB }}/station-db .

            # Tag 
            docker tag {{ env.REPO_DOCKER_HUB }}/station-db:latest {{ env.REPO_DOCKER_HUB }}/station-db:${{ github.event.inputs.docker_project_version}}

            # Push
            docker push {{ env.REPO_DOCKER_HUB }}/station-db:${{ github.event.inputs.docker_project_version}}
        working-directory: current/application/StationDemoDb
 



  build_backend:
    runs-on: ubuntu-latest
    steps:
      
      # Retrieve a token for pull
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}


      # Retrieve current source
      - name: Checkout current 
        id: checkout-current
        uses: actions/checkout@v3
        with:
          path: current
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: Set up Java 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Build Backend
        id: build_backend
        run: mvn --batch-mode --update-snapshots package
        working-directory: current/application
 
      - name: Upload backend WAR
        id: upload-backendwar
        uses: actions/upload-artifact@v3
        with:
          name: backendwar
          path: current/application/spring-java/StationDemoWeb/target/StationDemoSecureWeb.war

  push_back_dockerhub:
    runs-on: ubuntu-latest
    needs: build_backend
    steps:

     # Retrieve a token for pull
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}


      # Retrieve current source
      - name: Checkout current 
        id: checkout-current
        uses: actions/checkout@v3
        with:
          path: current
          token: ${{ steps.get_workflow_token.outputs.token }}

      # Download artifact
      - name: download backend WAR
        id: download-backendwar
        uses: actions/download-artifact@v3
        with:
          name: backendwar
          path: current/application/spring-java/StationDemoWeb/docker/StationDemoSecureWeb.war
 
      - name: debug
        id: debug
        run: ls
        working-directory: current/application/spring-java/StationDemoWeb/docker
 

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Tag push
        id: push-backend-docker
        run: |
            # Build
            docker build -t {{ env.REPO_DOCKER_HUB }}/station-back docker

            # Tag 
            docker tag {{ env.REPO_DOCKER_HUB }}/station-back:latest {{ env.REPO_DOCKER_HUB }}/station-back:${{ github.event.inputs.docker_project_version}}

            # Push
            docker push {{ env.REPO_DOCKER_HUB }}/station-back:${{ github.event.inputs.docker_project_version}}
        working-directory: current/application/spring-java/StationDemoWeb
 

  build_front:
    runs-on: ubuntu-latest
    steps:
      
      # Retrieve a token for pull
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}


      # Retrieve current source
      - name: Checkout current 
        id: checkout-current
        uses: actions/checkout@v3
        with:
          path: current
          token: ${{ steps.get_workflow_token.outputs.token }}

      # Install nodejs
      - name: Set up NodeJS ${{ env.NODEJS_VERSION}} 
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION}}
      - run: node --version
      
      # Build front
      - name: Build front Angular
        id: build-front-angular
        run: |
            # Init
            npm install

            # Launch Execution
            npm run-script prod-zip
        working-directory: current/application/StationDemoClient/station-angular4-poc

      - name: Upload frontend zip
        id: upload-frontendangular
        uses: actions/upload-artifact@v3
        with:
          name: frontendangular
          path: current/application/StationDemoClient/station-angular4-poc/dist

        
  
  # Push station front to dockerhub
  push_front_dockerhub:
    runs-on: ubuntu-latest
    needs: build_front
    steps:

      # Retrieve a token for pull
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}


      # Retrieve current source
      - name: Checkout current 
        id: checkout-current
        uses: actions/checkout@v3
        with:
          path: current
          token: ${{ steps.get_workflow_token.outputs.token }}

      # Download artifact
      - name: download front end angular
        id: download-frontend-angular
        uses: actions/download-artifact@v3
        with:
          name: frontendangular
          path: current/application/StationDemoClient/station-angular4-poc/dockerwithnginx/
 
      - name: debug
        id: debug
        run: ls
        working-directory: current/application/StationDemoClient/station-angular4-poc/dockerwithnginx/
 

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Tag push
        id: push-frontendangular-docker
        run: |
            # Build
            docker build -t {{ env.REPO_DOCKER_HUB }}/station-front-nginx dockerwithnginx

            # Tag 
            docker tag {{ env.REPO_DOCKER_HUB }}/station-front-nginx:latest {{ env.REPO_DOCKER_HUB }}/station-front-nginx:${{ github.event.inputs.docker_project_version}}"
  
            # Push
            docker push {{ env.REPO_DOCKER_HUB }}/station-front-nginx:${{ github.event.inputs.docker_project_version}}
        working-directory: current/application/StationDemoClient/station-angular4-poc
 
   # Push station front to dockerhub
  tag_version_git:
    runs-on: ubuntu-latest
    needs: [push_db_dockerhub, push_back_dockerhub, push_front_dockerhub]
    steps:

      # Retrieve a token for pull
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}


      # Retrieve current source
      - name: Checkout current 
        id: checkout-current
        uses: actions/checkout@v3
        with:
          path: current
          token: ${{ steps.get_workflow_token.outputs.token }}
    
      - name: Tag Push Git
        id: push-tag-git
        run: |
            # Commit tag
            "git tag -a v${{ github.event.inputs.docker_project_version}}-m "Version ${{ github.event.inputs.docker_project_version}}"

            # Tag 
            git push origin v${{ github.event.inputs.docker_project_version}}
  
        working-directory: current/application
 