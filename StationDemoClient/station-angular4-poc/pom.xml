<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>station-angular4-poc</artifactId>
	<packaging>war</packaging>
	<parent>
		<groupId>com.exakaconsulting.poc</groupId>
		<artifactId>StationDemoProject</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>

	<properties>
	</properties>

	<dependencies>	
	
		<!--  Add it to the Add a validation filter to this "web.xml" of sonar -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
	
	</dependencies>

	<build>
	  <finalName>station-angular4-poc</finalName>
	  <plugins>
	  
	    <plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<configuration>
				<failOnMissingWebXml>false</failOnMissingWebXml>
			</configuration>
		</plugin>
	  
		<plugin>
			<groupId>org.codehaus.mojo</groupId>
			<artifactId>exec-maven-plugin</artifactId>
			<executions>
				<!-- Required: The following will ensure `npm install` is called
					before anything else during the 'Default Lifecycle' -->
				<execution>
					<id>npm install (initialize)</id>
					<goals>
						<goal>exec</goal>
					</goals>
					<phase>initialize</phase>
					<configuration>
						<executable>${npm.executable}</executable>
						<arguments>
							<argument>install</argument>
							<argument>-g</argument>
						</arguments>
					</configuration>
				</execution>
				
				<!-- Required: The following will ensure `npm install` is called
				     before anything else during the 'Clean Lifecycle' -->
				<execution>
					<id>npm install (clean)</id>
					<goals>
						<goal>exec</goal>
					</goals>
					<phase>pre-clean</phase>
					<configuration>
						<executable>${npm.executable}</executable>
						<arguments>
							<argument>install</argument>
						</arguments>
					</configuration>
				</execution>
				
				<!-- Required: This following calls `npm run build` where 'build' is
					    the script name I used in my project, change this if yours is
							different -->
				<execution>
					<id>npm run-script prod</id>
					<goals>
						<goal>exec</goal>
					</goals>
					<phase>prepare-package</phase>
					<configuration>
						<executable>${npm.executable}</executable>
						<arguments>
						    <argument>run-script</argument>
							<argument>prod</argument>
						</arguments>
					</configuration>
				</execution>
				
			</executions>
	    </plugin>

	  
	  
	    <plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
      				<execution>
          				<id>copy-resources</id>
          				<phase>prepare-package</phase>
       				    <goals><goal>copy-resources</goal></goals>
          				<configuration>
             				<outputDirectory>${project.build.directory}/${project.build.finalName}</outputDirectory >
              				<resources>
                 			   <resource>
                      			  <directory>${basedir}/dist</directory >
                			  </resource>
             			   </resources>
          				</configuration>
      				</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
	<profiles>
        <profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<!-- Override the executable names for Windows -->
				<npm.executable>npm.cmd</npm.executable>
			</properties>
		</profile>
		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>unix</family>
				</os>
			</activation>
			<properties>
            <!-- Override the executable names for Linux -->
				<npm.executable>npm</npm.executable>
			</properties>
		</profile>
 	</profiles>


</project>