pipeline {
   agent { label 'stationslave' }
   
   tools { 
        maven 'Maven 3.3.9' 
        jdk 'jdk8' 
    }
   
    stages {
        stage ("buildProject") {
            steps {
              // Use instead mvn clean deploy in real environment 
              sh "${M2_HOME}/bin/mvn clean install"
            }
        }
		
        stage ("CreateDockerImage") {
            steps {
                sh "docker build -t kagzouli/station-db StationDemoDb"
		
		sh "cp StationDemoWeb/target/StationDemoSecureWeb.war StationDemoWeb/docker/StationDemoSecureWeb.war"
                sh "docker build -t kagzouli/station-back StationDemoWeb/docker"
                
		sh "cp  StationDemoClient/station-angular4-poc/target/station-angular4-poc.war StationDemoClient/station-angular4-poc/dockerwithtomcat/station-angular4-poc.war"
		sh "docker build -t kagzouli/station-front-tomcat StationDemoClient/station-angular4-poc/dockerwithtomcat"
	
		sh "cp -rf StationDemoClient/station-angular4-poc/dist StationDemoClient/station-angular4-poc/dockerwithnginx/"
		sh "docker build -t kagzouli/station-front-nginx StationDemoClient/station-angular4-poc/dockerwithnginx"
                
            }
        }
		
        stage ("TagDockerImage") {
            steps {
                sh "docker tag kagzouli/station-db:latest kagzouli/station-db:${VERSION}"
                sh "docker tag kagzouli/station-back:latest kagzouli/station-back:${VERSION}"
                sh "docker tag kagzouli/station-front-nginx:latest kagzouli/station-front-nginx:${VERSION}"
                sh "docker tag kagzouli/station-front-tomcat:latest kagzouli/station-front-tomcat:${VERSION}"
            }
        }

        stage ("PushToRegistry") {
            steps {
                sh "docker push ${REPO_NEXUS_URL}kagzouli/station-db:${VERSION}"
                sh "docker push ${REPO_NEXUS_URL}kagzouli/station-back:${VERSION}"
                sh "docker push ${REPO_NEXUS_URL}kagzouli/station-front-nginx:${VERSION}"
                sh "docker push ${REPO_NEXUS_URL}kagzouli/station-front-tomcat:${VERSION}"
            }
        }

     }

     post { 
	always { 
		cleanWs()
	}
     }
}
