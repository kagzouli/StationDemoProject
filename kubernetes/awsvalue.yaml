# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

app:
  # Context path of the repo nexus url
  repoNexusUrl: ''

  network:
    vpc_cidr:  '12.0.0.0/21'

    region: 'eu-west-3' 
 
 
stationdb:
  mode: 'internaldb'

  # Directory where to put data of the database - Use only if mode=internaldb
  databaseData: /data
  
  # Mysql root password -Use only for mode=internaldb
  mysqlRootPassword: root123
  
  # Mysql user
  mysqlUser: stationuser
  
  # Mysql password
  mysqlPassword: stationpwd

  # Use only if mode=externaldb for url external database
  jdbcDatabaseUrl: 'jdbc:mysql://stationdb.interne.exakaconsulting.org:3306/StationDemoDb?connectTimeout=0' 
 
  # Storage data - Use only if mode=internaldb
  storage: 
    
    # Storage type
    storageClass: 'none' 
    #storageClass: 'efs-sc' 

    # Data Capacity
    dataCapacity: 100Mi 
 
    # Global Capacity
    globalCapacity: 150Mi

    efsid: fs-7af0cecb
       
   
  image:
    pullPolicy: IfNotPresent


stationback:

  # Nb replicas
  nbReplicas: 2

  # Nbr connexion datasource active db
  nbConnectionDbMaxActive: 15
  
  # Hostname
  hostname: stationback.exakaconsulting.org
  
  # External port
  externalPort: 8080

  service:
    
    # Node port
    nodePort: 32610

    # Internal port
    internalPort: 8080 
    
    # Type service:
    serviceType: NodePort 

  image:
    pullPolicy: IfNotPresent   

  ingress:
    
    # type empty Ingress or TargetGroupBinding
    #type: "Ingress"
    type: "TargetGroupBinding"
    
    targetGroupARN: "arn:aws:elasticloadbalancing:eu-west-3:794637260409:targetgroup/station-back-target-group/f645c70329f90b18" 
    
    annotations:  
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: "ip"
      alb.ingress.kubernetes.io/tags: Name=station-back-alb, Application=STATION
      alb.ingress.kubernetes.io/healthcheck-path: "/StationDemoSecureWeb/health"
      alb.ingress.kubernetes.io/listen-ports:   '[{"HTTP": 8080}]'
      alb.ingress.kubernetes.io/load-balancer-name: station-back-alb
      alb.ingress.kubernetes.io/group.name: station-back-group

stationfront:

  # Nb replicas
  nbReplicas: 2


  # Region 
  region: eu-west-3
  
  # Client id traf stat
  clientIdTrafStat: 0oaeg3yghaL9mQalz0h7
  
  
  #Okta URL
  oktaUrl: https://dev-884254.oktapreview.com

  service:
    # External port
    internalPort: 80 
    
    # Node port
    nodePort: 32601
    
    # Type service:
    # Dans le cas Ingress, il faut prendre ClusterIP ,  si c'est TargetGroupBuinding prendre imperativement NodePort 
    #serviceType: ClusterIP
    serviceType: NodePort 
 
  image:
    pullPolicy: IfNotPresent  

  
  ingress:
 
    # type Ingress or TargetGroupBinding
    # Dans le cas Ingress, il faut prendre ClusterIP ,  si c'est TargetGroupBuinding prendre imperativement NodePort 
    #type: "Ingress"
    type: "TargetGroupBinding"

    targetGroupARN: "arn:aws:elasticloadbalancing:eu-west-3:794637260409:targetgroup/station-front-target-group/95adf47392485349" 

    annotations:
      kubernetes.io/ingress.class: alb
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: "ip"
      alb.ingress.kubernetes.io/tags: Name=station-front-alb, Application=STATION
      alb.ingress.kubernetes.io/healthcheck-path: "/station-angular4-poc"
      alb.ingress.kubernetes.io/listen-ports:   '[{"HTTP": 80}]'
      alb.ingress.kubernetes.io/load-balancer-name: station-front-alb
      alb.ingress.kubernetes.io/group.name: station-front-group 
