{{- if (ne .Values.stationdb.mode "externaldb")   }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stationdb-deploy
  namespace: {{ .Release.Namespace | quote }}
spec:
  # A deployment's specification really only 
  # has a few useful options
  
  # 1. How many copies of each pod do we want?
  replicas: 1 

  # 2. Which pods are managed by this deployment?
  selector:
    # This must match the labels we set on the pod!
    matchLabels:
      app:  stationdb
  
  # This template field is a regular pod configuration 
  # nested inside the deployment spec
  template:
    metadata:
      # Set labels on the pod.
      # This is used in the deployment selector.
      labels:
        app: stationdb
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
      containers:
        - name: stationdb
          image: {{ template "stationdb.image.label" .  }}
          imagePullPolicy: {{ .Values.stationdb.image.pullPolicy | quote }}
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
          env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: stationdb-secret
                key: database-rootpassword
          - name: MYSQL_DATABASE
            value: "StationDemoDb"
          - name: MYSQL_USER
            value: {{ .Values.stationdb.mysqlUser | quote  }}
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: stationdb-secret 
                key: database-password 
          {{- if (ne .Values.stationdb.storage.storageClass "none")   }} 
          resources:
            requests:
              cpu: 300m
              memory: 1024Mi
            limits:
              cpu: 500m
              memory: 1024Mi
          volumeMounts:
          - name: datastationdb  
            mountPath: /var/lib/mysql
            readOnly: false
          {{- end }}
          ports:
          - containerPort: 3306
            protocol: TCP
      serviceAccountName: station
      {{- if (ne .Values.stationdb.storage.storageClass "none")   }}
      volumes:
      - name: datastationdb 
        persistentVolumeClaim: 
          claimName: stationdb-data  
      {{- end }}
 {{- end }}
